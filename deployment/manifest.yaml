---
apiVersion: v1
kind: Service
metadata:
  namespace: compost
  name: compost-server
  labels:
    app.kubernetes.io/name: compost-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: compost-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: compost
  name: compost-server
  labels:
    app.kubernetes.io/name: compost-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: compost-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: compost-server
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: compost-server
          securityContext: {}
          image: "registry.k8s.ojdip.net/compost-server:latest"
          command: ["/usr/local/bin/compost_server"]
          args:
            - "--smtp-bind=[::]:1025"
            - "--api-bind=[::]:1080"
            - "--bucket-name=$(AWS_BUCKET)"
            - "--bucket-region=$(AWS_REGION)"
            - "--smtp-tls-cert=/var/run/secrets/tls/tls.crt"
            - "--smtp-tls-key=/var/run/secrets/tls/tls.key"
            - "--proxy-protocol"
            - "--prometheus"
          imagePullPolicy: Always
          env:
            - name: LOG_LEVEL
              value: "info"
          envFrom:
            - secretRef:
                name: aws-secrets
            - configMapRef:
                name: aws-config
          ports:
            - name: http
              containerPort: 1080
              protocol: TCP
            - name: smtp
              containerPort: 1025
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources: {}
          volumeMounts:
            - name: tls
              mountPath: /var/run/secrets/tls
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: compost-tls
---
apiVersion: v1
kind: Service
metadata:
  namespace: compost
  name: compost-web
  labels:
    app.kubernetes.io/name: compost-web
spec:
  type: ClusterIP
  ipFamilyPolicy: PreferDualStack
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: compost-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: compost
  name: compost-web
  labels:
    app.kubernetes.io/name: compost-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: compost-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: compost-web
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: compost-web
          securityContext: {}
          image: "registry.k8s.ojdip.net/compost-web:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: compost-tls
  namespace: compost
spec:
  secretName: compost-tls
  issuerRef:
    name: compost-letsencrypt
    kind: Issuer
  dnsNames:
    - "compost.email"
    - "*.compost.email"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: compost
  name: compost
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "compost.email"
      secretName: compost-tls
  rules:
    - host: "compost.email"
      http:
        paths:
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: compost-server
                port:
                  name: http
          - path: /
            pathType: Prefix
            backend:
              service:
                name: compost-web
                port:
                  name: http
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    load-balancer.hetzner.cloud/hostname: mx.compost.email
    load-balancer.hetzner.cloud/ipv4-rdns: mx.compost.email
    load-balancer.hetzner.cloud/ipv6-rdns: mx.compost.email
    load-balancer.hetzner.cloud/location: nbg1
    load-balancer.hetzner.cloud/uses-proxyprotocol: "true"

  name: compost-smtp
  namespace: compost
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilies:
    - IPv6
    - IPv4
  ipFamilyPolicy: PreferDualStack
  ports:
    - appProtocol: smtp
      name: smtp
      port: 25
      protocol: TCP
      targetPort: smtp
  selector:
    app.kubernetes.io/name: compost-server
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  namespace: compost
  name: compost-server
  labels:
    app.kubernetes.io/name: compost-server
spec:
  endpoints:
    - port: http
  namespaceSelector:
    matchNames:
      - compost
  selector:
    matchLabels:
      app.kubernetes.io/name: compost-server
